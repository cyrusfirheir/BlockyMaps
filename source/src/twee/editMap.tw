:: editMap

<div id="loading-cover" class="closed"></div>

<div id="editor-map-container">
	<div id="map-container">
		<<= setup.bm.drawMap($curMap)>>
	</div>
</div>

<<timed 200ms>>
	<<script>>
		setup.bm.cameraFollow(".player");
		setup.zoomLevel = variables().curMap.zoom;
		setup.bm.mapZoom(setup.zoomLevel);
		$("#loading-cover").removeClass("closed");
		mapEditorInit();
	<</script>>
<</timed>>


<div title="Play the map" id="play-map" class="material-button">
	<i class="material-icons">play_arrow</i>
</div>

<div title="Center the map" id="re-center-map" class="material-button">
	<i class="material-icons">my_location</i>
</div>

<div title="Open Options menu" id="menu-link" class="material-button">
	<i class="material-icons">menu_open</i>
</div>

<div title="Copy JSON to clipboard" id="c-clipboard" class="material-button ccJS">
	<i class="material-icons">file_copy</i>
</div>

<div title="Edit raw JSON" id="edit-map" class="material-button">
	<i class="material-icons">code</i>
</div>


<div id="json-editor" class="closed">
	<div id="editor-scrim"></div>
	<div id="cm-json-editor" class="cm-text-editor" contenteditable="true"></div>
</div>


<div id="current-edit-array">
	<span class="content"></span>
</div>

<div id="object-editor" class="closed">

	<h6>Map properties</h6>
	<div id="map-meta">

		<span title="Not required, but helps with keeping track of multiple maps.">
			<i class="material-icons">help</i>
		</span>
		ID:
			<input id="mm-id" type="text">

		Rows:
			<input id="mm-size-rows" type="text">

		Columns:
			<input id="mm-size-cols" type="text">

		<span title="Set the zoom multiplier at which the map is loaded onto screen during play.&#13;&#10;Default value is 1. Recommended to keep between 0.25 and 2.5">
			<i class="material-icons">help</i>
		</span>
		Map zoom level:
			<input id="mm-zoom" type="text">

		<span title="The CSS class to attach to the map as a whole.&#13;&#10;Useful when having different color schemes for different 'regions' in the world.">
			<i class="material-icons">help</i>
		</span>
		Map CSS classes:
			<input id="mm-map-css" type="text">
	</div>


	<h6>Default block properties</h6>
	<div id="cell-default">

		<span title="Default text shown to the player on every block on the map as the name of the place represented by the map.">
			<i class="material-icons">help</i>
		</span>
		Name:
			<input id="cd-name" type="text">

		<span title="Default text shown to the player on every block on the map as the description of the place represented by the map.">
			<i class="material-icons">help</i>
		</span>
		Description:
			<textarea id="cd-desc"></textarea>

		<span title="Default 'content'(images/icons) which shows up on every block.&#13;&#10;Use plain html markup.">
			<i class="material-icons">help</i>
		</span>
		<span title="Example:&#13;&#10;
		<img src=&quot;images/icon.png&quot;>">
			<i class="material-icons">info</i>
		</span>
		Content:
			<textarea id="cd-content"></textarea>

		<span title="Classes (separate with whitespace) to attach to every block on the map.">
			<i class="material-icons">help</i>
		</span>
		CSS classes:
			<input id="cd-css" type="text">

		<span title="Inline styling for every block on the map.">
			<i class="material-icons">help</i>
		</span>
		<span title="Example:&#13;&#10;
		background-color: red;&#13;&#10;
		border-color: white;">
			<i class="material-icons">info</i>
		</span>
		<span title="ONLY for testing purposes.&#13;&#10;NOT recommended for actual use; use a CSS class instead.">
			<i class="material-icons">warning</i>
		</span>
		Inline CSS:
			<textarea id="cd-inline"></textarea>

		<span title="A list of links that show up for every block on the map.&#13;&#10;Use an array of JSON objects.">
			<i class="material-icons">help</i>
		</span>
		<span title="Example:&#13;&#10;
		[&#13;&#10;
			{&#13;&#10;
				&quot;name&quot;: &quot;Name of link&quot;,&#13;&#10;
				&quot;func&quot;: &quot;<<SugarCube Macro>>&quot;&#13;&#10;
			}&#13;&#10;
		]">
			<i class="material-icons">info</i>
		</span>
		Actions:
			<textarea id="cd-acts"></textarea>

	</div>

	<h6>Selected block properties</h6>
	<div id="cell-selected">

		<span title="Text shown to the player for the selected block(s) on the map as the name of the place represented by block.">
			<i class="material-icons">help</i>
		</span>
		Name:
			<input id="cs-name" type="text">

		<span title="Text shown to the player for the selected block(s) on the map as the description of the place represented by block.">
			<i class="material-icons">help</i>
		</span>
		Description:
			<textarea id="cs-desc"></textarea>

		<span title="'Content'(images/icons) which shows up on the selected block(s).&#13;&#10;Use plain html markup.">
			<i class="material-icons">help</i>
		</span>
		<span title="Example:&#13;&#10;
		<img src=&quot;images/icon.png&quot;>">
			<i class="material-icons">info</i>
		</span>
		Content:
			<textarea id="cs-content"></textarea>

		<span title="Classes (separate with whitespace) to attach to the selected block(s) on the map.">
			<i class="material-icons">help</i>
		</span>
		CSS classes:
			<input id="cs-css" type="text">

		<span title="Inline styling for the selected block(s) on the map.">
			<i class="material-icons">help</i>
		</span>
		<span title="Example:&#13;&#10;
		background-color: red;&#13;&#10;
		border-color: white;">
			<i class="material-icons">info</i>
		</span>
		Inline CSS:
			<textarea id="cs-inline"></textarea>

		<span title="A list of links that show up for the selected block(s) on the map.&#13;&#10;Use an array of JSON objects.">
			<i class="material-icons">help</i>
		</span>
		<span title="Example:&#13;&#10;
		[&#13;&#10;
			{&#13;&#10;
				&quot;name&quot;: &quot;Name of link&quot;,&#13;&#10;
				&quot;func&quot;: &quot;<<SugarCube Macro>>&quot;&#13;&#10;
			}&#13;&#10;
		]">
			<i class="material-icons">info</i>
		</span>
		Actions:
			<textarea id="cs-acts"></textarea>

	</div>

</div>
